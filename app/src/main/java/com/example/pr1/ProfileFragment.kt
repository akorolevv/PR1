// app/src/main/java/com/example/pr1/ProfileFragment.kt
package com.example.pr1

import android.app.AlertDialog
import android.content.Intent
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.EditText
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.pr1.data.UserManager
import com.example.pr1.databinding.FragmentProfileBinding

class ProfileFragment : Fragment() {

    private var _binding: FragmentProfileBinding? = null
    private val binding get() = _binding!!
    private lateinit var userManager: UserManager

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentProfileBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        userManager = UserManager(requireContext())

        setupUserInfo()
        setupClickListeners()
        setupThemeSwitcher()
    }

    private fun setupUserInfo() {
        val currentUser = userManager.getCurrentUser()
        if (currentUser != null) {
            binding.profileName.text = currentUser.login
            binding.profileEmail.text = currentUser.email
            binding.profileStatus.text = currentUser.status
        } else {
            binding.profileName.text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            binding.profileEmail.text = "user@example.com"
            binding.profileStatus.text = "–ù–æ–≤–∏—á–æ–∫ –≤ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ üßò‚Äç‚ôÄÔ∏è"
        }
    }

    private fun setupClickListeners() {
        binding.logoutButton.setOnClickListener {
            showLogoutConfirmation()
        }

        binding.favoritesButton.setOnClickListener {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            val fragmentManager = requireActivity().supportFragmentManager
            fragmentManager.beginTransaction()
                .replace(R.id.fragment_container, FavoritesFragment())
                .addToBackStack(null)
                .commit()
        }

        // –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        binding.editStatusButton.setOnClickListener {
            showEditStatusDialog()
        }

        // –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ —Å–∞–º–æ–º—É —Å—Ç–∞—Ç—É—Å—É
        binding.profileStatus.setOnClickListener {
            showEditStatusDialog()
        }
    }

    private fun showLogoutConfirmation() {
        AlertDialog.Builder(requireContext())
            .setTitle("–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
            .setMessage("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?")
            .setPositiveButton("–í—ã–π—Ç–∏") { _, _ ->
                performLogout()
            }
            .setNegativeButton("–û—Ç–º–µ–Ω–∞", null)
            .show()
    }

    private fun performLogout() {
        userManager.logout()

        val intent = Intent(activity, LoginActivity::class.java)
        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
        startActivity(intent)
    }

    // –ù–û–í–´–ô –ú–ï–¢–û–î: –ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    private fun showEditStatusDialog() {
        val currentStatus = binding.profileStatus.text.toString()

        val editText = EditText(requireContext()).apply {
            setText(currentStatus)
            setSelection(currentStatus.length) // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
            hint = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å (–¥–æ 255 —Å–∏–º–≤–æ–ª–æ–≤)"
            maxLines = 3
        }

        AlertDialog.Builder(requireContext())
            .setTitle("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞")
            .setMessage("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏–ª–∏ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö –≤ –º–µ–¥–∏—Ç–∞—Ü–∏–∏")
            .setView(editText)
            .setPositiveButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å") { _, _ ->
                val newStatus = editText.text.toString().trim()
                when {
                    newStatus.isEmpty() -> {
                        Toast.makeText(requireContext(), "–°—Ç–∞—Ç—É—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", Toast.LENGTH_SHORT).show()
                    }
                    newStatus.length > 255 -> {
                        Toast.makeText(requireContext(), "–°—Ç–∞—Ç—É—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 255 —Å–∏–º–≤–æ–ª–æ–≤", Toast.LENGTH_SHORT).show()
                    }
                    else -> {
                        updateUserStatus(newStatus)
                    }
                }
            }
            .setNegativeButton("–û—Ç–º–µ–Ω–∞", null)
            .show()
    }

    // –ù–û–í–´–ô –ú–ï–¢–û–î: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private fun updateUserStatus(newStatus: String) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ProgressBar)
        binding.editStatusButton.isEnabled = false

        userManager.updateUserStatus(
            newStatus = newStatus,
            onSuccess = { updatedStatus ->
                requireActivity().runOnUiThread {
                    binding.profileStatus.text = updatedStatus
                    binding.editStatusButton.isEnabled = true
                    Toast.makeText(requireContext(), "–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω!", Toast.LENGTH_SHORT).show()
                }
            },
            onError = { errorMessage ->
                requireActivity().runOnUiThread {
                    binding.editStatusButton.isEnabled = true
                    Toast.makeText(requireContext(), "–û—à–∏–±–∫–∞: $errorMessage", Toast.LENGTH_LONG).show()
                }
            }
        )
    }

    private fun setupThemeSwitcher() {
        // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä App —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–µ–º–æ–π
        val app = requireActivity().applicationContext as App

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º–æ–π
        binding.themeSwitcher.isChecked = app.darkTheme

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
        binding.themeSwitcher.setOnCheckedChangeListener { _, isChecked ->
            app.switchTheme(isChecked)

            // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–µ–º—ã
            requireActivity().recreate()
        }
    }

    override fun onResume() {
        super.onResume()
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω
        setupUserInfo()
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}